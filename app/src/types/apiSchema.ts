/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/personas": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** ペルソナの作成 */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["PersonaCreate"];
                };
            };
            responses: {
                /** @description 作成成功 */
                201: {
                    headers: {
                        Location?: string;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 不正なリクエスト */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        /** @example {
                         *       "message": "入力内容が正しくありません"
                         *     } */
                        "application/json": unknown;
                    };
                };
                /** @description An unexpected error occurred */
                default: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/personas/{personaId}/projects": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * ペルソナのプロジェクトの一覧
         * @description ペルソナのプロジェクトの一覧。プロジェクトは試験日の昇順。
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    personaId: components["parameters"]["PersonaId"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description プロジェクトの一覧 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Project"][];
                    };
                };
                /** @description データが見つからない */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        /** @example {
                         *       "message": "データが見つかりません"
                         *     } */
                        "application/json": unknown;
                    };
                };
                /** @description An unexpected error occurred */
                default: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        /** ペルソナのプロジェクトの作成 */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    personaId: components["parameters"]["PersonaId"];
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["ProjectCreate"];
                };
            };
            responses: {
                /** @description 作成成功 */
                201: {
                    headers: {
                        Location?: string;
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 不正なリクエスト */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        /** @example {
                         *       "message": "入力内容が正しくありません"
                         *     } */
                        "application/json": unknown;
                    };
                };
                /** @description An unexpected error occurred */
                default: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/projects/{projectId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** プロジェクトの取得 */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    projectId: components["parameters"]["ProjectId"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description プロジェクトの取得 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Project"];
                    };
                };
                /** @description データが見つからない */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        /** @example {
                         *       "message": "データが見つかりません"
                         *     } */
                        "application/json": unknown;
                    };
                };
                /** @description An unexpected error occurred */
                default: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/projects/{projectId}/steps/generate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * ステップ候補のリストの取得
         * @description ステップ候補のリストを取得する。
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    projectId: components["parameters"]["ProjectId"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description ステップ候補のリスト */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            title?: string;
                            theme?: string;
                            /** @description 並び順（昇順） */
                            index?: number;
                        }[];
                    };
                };
                /** @description An unexpected error occurred */
                default: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/projects/{projectId}/weights/generate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 配点割合候補のリストの取得
         * @description 配点割合候補のリストを取得する。
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    projectId: components["parameters"]["ProjectId"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 配点割合候補のリスト */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            area?: string;
                            /**
                             * Format: integer
                             * @description 配点割合（%）
                             */
                            weightPercent?: number;
                        }[];
                    };
                };
                /** @description An unexpected error occurred */
                default: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/projects/{projectId}/scopes/generate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 試験範囲候補のリストの取得
         * @description 試験範囲候補のリストの取得。
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    projectId: components["parameters"]["ProjectId"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 試験範囲候補のリスト */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** Format: uuid */
                            weightId?: string;
                            scope?: string;
                            description?: string;
                        }[];
                    };
                };
                /** @description An unexpected error occurred */
                default: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/projects/{projectId}/tasks/generate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * タスク候補のリストの登録
         * @description タスク候補のリストの登録。
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    projectId: components["parameters"]["ProjectId"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 作成成功 */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @description 作成されたタスクIDのリスト */
                            taskIds?: string[];
                        };
                    };
                };
                /** @description An unexpected error occurred */
                default: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/projects/{projectId}/steps": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** プロジェクトに紐づくステップの一覧 */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    projectId: components["parameters"]["ProjectId"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description プロジェクトに紐づくステップの一覧 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Step"][];
                    };
                };
                /** @description データが見つからない */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        /** @example {
                         *       "message": "データが見つかりません"
                         *     } */
                        "application/json": unknown;
                    };
                };
                /** @description An unexpected error occurred */
                default: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        /** ステップの作成 */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    projectId: components["parameters"]["ProjectId"];
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["StepCreate"][];
                };
            };
            responses: {
                /** @description 作成成功 */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @description 作成されたステップIDのリスト */
                            stepIds?: string[];
                        };
                    };
                };
                /** @description 不正なリクエスト */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        /** @example {
                         *       "message": "入力内容が正しくありません"
                         *     } */
                        "application/json": unknown;
                    };
                };
                /** @description An unexpected error occurred */
                default: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/projects/{projectId}/weights": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 配点割合の作成 */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    projectId: components["parameters"]["ProjectId"];
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["WeightCreate"][];
                };
            };
            responses: {
                /** @description 作成成功 */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @description 作成されたウェイトIDのリスト */
                            weightIds?: string[];
                        };
                    };
                };
                /** @description 不正なリクエスト */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        /** @example {
                         *       "message": "入力内容が正しくありません"
                         *     } */
                        "application/json": unknown;
                    };
                };
                /** @description An unexpected error occurred */
                default: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/projects/{projectId}/scopes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 試験範囲の作成 */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    projectId: components["parameters"]["ProjectId"];
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["ScopeCreate"][];
                };
            };
            responses: {
                /** @description 作成成功 */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @description 作成された試験範囲のリスト */
                            scopeIds?: string[];
                        };
                    };
                };
                /** @description 不正なリクエスト */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        /** @example {
                         *       "message": "入力内容が正しくありません"
                         *     } */
                        "application/json": unknown;
                    };
                };
                /** @description An unexpected error occurred */
                default: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/steps/{stepId}/tasks": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ステップに紐づくタスクの一覧 */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    stepId: components["parameters"]["StepId"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description ステップに紐づくタスクの一覧 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Task"][];
                    };
                };
                /** @description データが見つからない */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        /** @example {
                         *       "message": "データが見つかりません"
                         *     } */
                        "application/json": unknown;
                    };
                };
                /** @description An unexpected error occurred */
                default: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        PersonaCreate: {
            /** @example 2 */
            weekdayHours: number;
            /** @example 5 */
            weekendHours: number;
            /**
             * @example インプット先行パターン
             * @enum {string}
             */
            learningPattern: "インプット先行パターン" | "アウトプット先行パターン";
        };
        Project: {
            /** Format: uuid */
            projectId?: string;
            /** Format: uuid */
            personaId?: string;
            certificationName?: string;
            /** Format: date */
            startDate?: string;
            /** Format: date */
            examDate?: string;
            /** @enum {string} */
            baseMaterial?: "TEXTBOOK" | "VIDEO";
        };
        ProjectCreate: {
            /** @example AWS Solutions Architect Associate */
            certificationName: string;
            /**
             * Format: date
             * @example 2025-10-01
             */
            startDate: string;
            /**
             * Format: date
             * @example 2025-12-15
             */
            examDate: string;
            /**
             * @example TEXTBOOK
             * @enum {string}
             */
            baseMaterial: "TEXTBOOK" | "VIDEO";
        };
        Step: {
            /** Format: uuid */
            stepId?: string;
            /** Format: uuid */
            projectId?: string;
            title?: string;
            theme?: string;
            /** Format: date */
            startDate?: string;
            /** Format: date */
            endDate?: string;
            /** @description 小さい値から昇順に並ぶシリアル番号 */
            index?: number;
        };
        StepCreate: {
            title: string;
            theme: string;
            /** Format: date */
            startDate: string;
            /** Format: date */
            endDate: string;
            /** @description 小さい値から昇順に並ぶシリアル番号 */
            index: number;
        };
        Task: {
            /** Format: uuid */
            taskId?: string;
            /** Format: uuid */
            stepId?: string;
            title?: string;
            description?: string;
            /** Format: date */
            startDate?: string;
            /** Format: date */
            dueDate?: string;
            /** @enum {string} */
            taskStatus?: "undo" | "doing" | "done" | "blocked";
        };
        Scope: {
            /** Format: uuid */
            scopeId?: string;
            /** Format: uuid */
            weightId?: string;
            scope?: string;
            description?: string;
        };
        ScopeCreate: {
            /** Format: uuid */
            weightId: string;
            scope: string;
            description: string;
        };
        Weight: {
            /** Format: uuid */
            weightId?: string;
            /** Format: uuid */
            projectId?: string;
            area?: string;
            weightPercent?: number;
        };
        WeightCreate: {
            area: string;
            /** @example 30 */
            weightPercent: number;
        };
    };
    responses: never;
    parameters: {
        PersonaId: string;
        ProjectId: string;
        StepId: string;
        TaskId: string;
        ScopeId: string;
        WeightId: string;
    };
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
